<?php

namespace Differ\Differ;

use function Functional\flatten;

function genDiff($pathToFile1, $pathToFile2)
{
    $file1Content = getContentsOfFile($pathToFile1);
    $file2Content = getContentsOfFile($pathToFile2);

    $generalDataOfFiles = array_intersect_assoc($file1Content, $file2Content);
    $filesKeys = getUniqueKeysOfFiles($file1Content, $file2Content);

    $result = array_reduce($filesKeys, function ($acc, $key) use ($file1Content, $file2Content, $generalDataOfFiles) {                         
    if (array_key_exists($key, $file1Content) && !array_key_exists($key, $file2Content)) {
       $value1 = gettype($file1Content[$key]) === "boolean" ? isTrueOrFalse($file1Content[$key]) : $file1Content[$key];
       $acc[] =  "- {$key}: {$value1}";
    } 
    if (!array_key_exists($key, $file1Content) && array_key_exists($key, $file2Content)) {
         $value2 = gettype($file2Content[$key]) === "boolean" ? isTrueOrFalse($file2Content[$key]) : $file2Content[$key];
        $acc[] =  "+ {$key}: {$value2}";
    } 
    if (array_key_exists($key, $generalDataOfFiles)) {
        $acc[] =  "  {$key}: {$generalDataOfFiles[$key]}";
    }
    if (array_key_exists($key, $file1Content) && array_key_exists($key, $file2Content) && !array_key_exists($key, $generalDataOfFiles)) {
        $value1 = gettype($file1Content[$key]) === "boolean" ? isTrueOrFalse($file1Content[$key]) : $file1Content[$key];
        $value2 = gettype($file2Content[$key]) === "boolean" ? isTrueOrFalse($file2Content[$key]) : $file2Content[$key];
        $acc[] = "- {$key}: {$value1}";
        $acc[] = "+ {$key}: {$value2}";
    }
    return $acc;
    }, []);
    
    $result = implode("\n  ", $result);
    return "{\n$result\n}\n";
}

function isTrueOrFalse($value)
{
    return $value === true ? "true" : "false";
}

function getContentsOfFile($pathToFile)
{
    $absolutePathToFile = realpath($pathToFile);
    $fileContents = file_get_contents($absolutePathToFile);
    return json_decode($fileContents, $associative = true);
}

function getUniqueKeysOfFiles($file1Content, $file2Content)
{
    $file1Keys = array_keys($file1Content);
    $file2Keys = array_keys($file2Content);
    $filesKeys = array_unique(array_merge($file1Keys, $file2Keys));
    sort($filesKeys, SORT_STRING);
    return $filesKeys;
}
